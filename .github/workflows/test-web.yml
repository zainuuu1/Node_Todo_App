
name: MY-NODE-APP PIPELINE

on:
  push:
    branches: [main]

jobs:
  Setup-and-deploy:
    runs-on: test-web
    steps:
      - uses: actions/checkout@v4
      
     #   - name: Installing Dependencies
     #     run: npm install

     #   - name: Run the app
     #     run: pm2 start npm --name "my-node-app" -- start -- -p 4000

      - name: Generate Trivy Vulnerability Report
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: "fs"
          scanners: "vuln,secret,config"
          output: trivy-report.json
          format: json
          # severity: HIGH,CRITICAL

      - name: Upload Vulnerability Scan Results
        uses: actions/upload-artifact@v4
        with:
          name: trivy-report
          path: trivy-report.json

      - name: Building the Docker image
        run: |
          sudo docker build . -t ${{ vars.DOCKER_USERNAME }}/test-node:latest
          sudo docker image ls

      - name: Pushing Image to DockerHub
        run: |
          echo "${{ secrets.DOCKER_PAT }}" | sudo docker login -u ${{ vars.DOCKER_USERNAME }} --password-stdin
          sudo docker push ${{ vars.DOCKER_USERNAME }}/test-node:latest

      - name: Docker Scout 
        uses: docker/scout-action@v1.17.1
        with:
            dockerhub-user: ${{ vars.DOCKER_USERNAME }}
            dockerhub-password: ${{ secrets.DOCKER_PAT }}
            command: quickview,cves
            image: ${{ vars.DOCKER_USERNAME }}/test-node:latest
            only-severities: critical, high
            #NOTE: It is scanning a DockerHub public repository image, for private images, you need to setup registry. 

      - name: Removing Docker
        run: |
          sudo docker container stop mynodeapp
          sudo docker container rm mynodeapp   
        continue-on-error: true

      - name: Running the App with Docker
        run: |
          sudo docker container run --name mynodeapp -d -p 3000:3000 ${{ vars.DOCKER_USERNAME }}/test-node:latest
          
